{"version":3,"sources":["filter.js"],"names":["mongoose","analyzeWhereSpec","val","toLowerCase","test","indexOf","applyExists","query","spec","forEach","key","where","exists","applyGreaterThan","gt","applyGreaterThanEqual","gte","applyLesserThan","lt","applyLesserThanEqual","lte","applyNotEqual","ne","applyRegex","buildRegex","term","applyRegexAsOptional","orOptions","orOptionsNode","concat","node","nodeOptions","push","length","or","regexContains","map","RegExp","sanitize","regexEndsWith","regexExact","regexStartsWith","regexEquals","str","replace","Query","prototype","filter","options","filters","mandatory","optional","contains","endsWith","startsWith","equals","exact","greaterThan","greaterThanEqual","lessThan","lessThanEqual","notEqual","notEqualTo"],"mappings":"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","sourcesContent":["export default (mongoose) => {\n\tfunction analyzeWhereSpec (val) {\n\t\tif (typeof val === 'string') {\n\t\t\tswitch (val.toLowerCase()) {\n\t\t\t\tcase 'null' : return null;\n\t\t\t\tcase 'true' : return true;\n\t\t\t\tcase 'false' : return false;\n\t\t\t\tdefault :\n\t\t\t\t\t// use a regex to validate if val is a real parse-able number\n\t\t\t\t\t// javascript isNaN() treats a string such as '100000329e97' as\n\t\t\t\t\t// a legitimate number, which is not a desirable result\n\t\t\t\t\t// e.g. both Number('100000329e97'), parseInt('100000329e97')\n\t\t\t\t\t// yield a number 100000329, and isNaN('100000329e97') === false\n\t\t\t\t\tif (/^[-+]?[0-9]*\\.?[0-9]+$/.test(val)) {\n\t\t\t\t\t\t// val is a number\n\t\t\t\t\t\tif (val.indexOf('.') > -1) {\n\t\t\t\t\t\t\t// val is a float\n\t\t\t\t\t\t\treturn parseFloat(val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn parseInt(val, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn val;\n\t}\n\n\tfunction applyExists (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).exists(analyzeWhereSpec(spec[key]));\n\t\t});\n\t}\n\n\tfunction applyGreaterThan (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).gt(spec[key]);\n\t\t});\n\t}\n\n\tfunction applyGreaterThanEqual (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).gte(spec[key]);\n\t\t});\n\t}\n\n\tfunction applyLesserThan (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).lt(spec[key]);\n\t\t});\n\t}\n\n\tfunction applyLesserThanEqual (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).lte(spec[key]);\n\t\t});\n\t}\n\n\tfunction applyNotEqual (query, spec = {}) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tquery.where(key).ne(analyzeWhereSpec(spec[key]));\n\t\t});\n\t}\n\n\tfunction applyRegex (query, spec = {}, buildRegex) {\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tlet val = buildRegex(spec[key]);\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\tval.forEach((term) => {\n\t\t\t\t\tquery.where(key, term);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tquery.where(key, val);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction applyRegexAsOptional (query, spec = {}, buildRegex) {\n\t\tlet\n\t\t\torOptions = [],\n\t\t\torOptionsNode = {};\n\n\t\tObject.keys(spec).forEach((key) => {\n\t\t\tlet val = buildRegex(spec[key]);\n\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\torOptions = orOptions.concat((() => {\n\t\t\t\t\tlet\n\t\t\t\t\t\tnode = {},\n\t\t\t\t\t\tnodeOptions = [];\n\n\t\t\t\t\tval.forEach((term) => {\n\t\t\t\t\t\tnode = {};\n\t\t\t\t\t\tnode[key] = term;\n\t\t\t\t\t\tnodeOptions.push(node);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn nodeOptions;\n\t\t\t\t})());\n\t\t\t} else {\n\t\t\t\torOptionsNode = {};\n\t\t\t\torOptionsNode[key] = val;\n\t\t\t\torOptions.push(orOptionsNode);\n\t\t\t}\n\t\t});\n\n\t\tif (orOptions.length > 0) {\n\t\t\tquery.or(orOptions);\n\t\t}\n\t}\n\n\tfunction regexContains (val) {\n\t\tif (Array.isArray(val) && val.length) {\n\t\t\treturn val.map(function (term) {\n\t\t\t\treturn regexContains(term);\n\t\t\t});\n\t\t}\n\n\t\tif (typeof val === 'string') {\n\t\t\treturn new RegExp(sanitize(val), 'i');\n\t\t}\n\n\t\treturn val;\n\t}\n\n\tfunction regexEndsWith (val) {\n\t\tif (Array.isArray(val) && val.length) {\n\t\t\treturn val.map(function (term) {\n\t\t\t\treturn regexEndsWith(term);\n\t\t\t});\n\t\t}\n\n\t\treturn new RegExp(sanitize(val) + '$', 'i');\n\t}\n\n\tfunction regexExact (val) {\n\t\tif (Array.isArray(val) && val.length) {\n\t\t\treturn val.map(function (term) {\n\t\t\t\treturn regexExact(term);\n\t\t\t});\n\t\t}\n\n\t\tval = analyzeWhereSpec(val);\n\n\t\tif (typeof val === 'string') {\n\t\t\treturn new RegExp('^' + sanitize(val) + '$', 'i');\n\t\t}\n\n\t\treturn val;\n\t}\n\n\tfunction regexStartsWith (val) {\n\t\tif (Array.isArray(val) && val.length) {\n\t\t\treturn val.map(function (term) {\n\t\t\t\treturn regexStartsWith(term);\n\t\t\t});\n\t\t}\n\n\t\treturn new RegExp('^' + sanitize(val), 'i');\n\t}\n\n\tfunction regexEquals (val) {\n\t\tif (Array.isArray(val) && val.length) {\n\t\t\treturn val.map(function (term) {\n\t\t\t\treturn regexEquals(term);\n\t\t\t});\n\t\t}\n\n\t\tval = analyzeWhereSpec(val);\n\n\t\treturn val;\n\t}\n\n\tfunction sanitize (str) {\n\t\t// sanitizes regex escapes\n\t\treturn str.replace(/[\\W\\s]/ig, '\\\\$&');\n\t}\n\n\tmongoose.Query.prototype.filter = function (options) {\n\t\tif (!options || !options.filters) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet\n\t\t\tmandatory = options.filters.mandatory || {},\n\t\t\toptional = options.filters.optional || {},\n\t\t\tquery = this;\n\n\t\t// MANDATORY\n\t\tapplyRegex(query, mandatory.contains, regexContains);\n\t\tapplyRegex(query, mandatory.endsWith, regexEndsWith);\n\t\tapplyRegex(query, mandatory.startsWith, regexStartsWith);\n\t\tapplyRegex(query, mandatory.equals, regexEquals);\n\t\tapplyRegex(query, mandatory.exact, regexExact);\n\n\t\tapplyExists(\n\t\t\tquery,\n\t\t\tmandatory.exists || {});\n\t\tapplyGreaterThan(\n\t\t\tquery,\n\t\t\tmandatory.greaterThan || mandatory.gt || {});\n\t\tapplyGreaterThanEqual(\n\t\t\tquery,\n\t\t\tmandatory.greaterThanEqual || mandatory.gte || {});\n\t\tapplyLesserThan(\n\t\t\tquery,\n\t\t\tmandatory.lessThan || mandatory.lt || {});\n\t\tapplyLesserThanEqual(\n\t\t\tquery,\n\t\t\tmandatory.lessThanEqual || mandatory.lte || {});\n\t\tapplyNotEqual(\n\t\t\tquery,\n\t\t\tmandatory.notEqual || mandatory.notEqualTo || mandatory.ne || {});\n\n\t\t// OPTIONAL\n\t\tapplyRegexAsOptional(query, optional.contains, regexContains);\n\t\tapplyRegexAsOptional(query, optional.endsWith, regexEndsWith);\n\t\tapplyRegexAsOptional(query, optional.startsWith, regexStartsWith);\n\t\tapplyRegexAsOptional(query, optional.equals, regexEquals);\n\t\tapplyRegexAsOptional(query, optional.exact, regexExact);\n\n\t\treturn query;\n\t};\n};\n"],"file":"filter.js"}