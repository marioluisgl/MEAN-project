{"version":3,"sources":["utils.js"],"names":["mergeFilters","base","model","forEach","key","concat","push"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,YAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AACnC,qBAAYA,KAAZ,EAAmBC,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACzC,QAAI,CAACH,IAAI,CAACG,GAAD,CAAT,EAAgB;AAAE;AACjBH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYF,KAAK,CAACE,GAAD,CAAjB;AACA,KAFD,MAEO,IAAI,sBAAcH,IAAI,CAACG,GAAD,CAAlB,CAAJ,EAA8B;AAAE;AACtC,UAAI,sBAAcF,KAAK,CAACE,GAAD,CAAnB,CAAJ,EAA+B;AAC9BH,QAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYH,IAAI,CAACG,GAAD,CAAJ,CAAUC,MAAV,CAAiBH,KAAK,CAACE,GAAD,CAAtB,CAAZ;AACA,OAFD,MAEO;AACNH,QAAAA,IAAI,CAACG,GAAD,CAAJ,CAAUE,IAAV,CAAeJ,KAAK,CAACE,GAAD,CAApB;AACA;AACD,KANM,MAMA,IAAI,sBAAcF,KAAK,CAACE,GAAD,CAAnB,CAAJ,EAA+B;AACrCF,MAAAA,KAAK,CAACE,GAAD,CAAL,CAAWE,IAAX,CAAgBL,IAAI,CAACG,GAAD,CAApB;AACAH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYF,KAAK,CAACE,GAAD,CAAjB;AACA,KAHM,MAGA,IAAI,sBAAOH,IAAI,CAACG,GAAD,CAAX,MAAqB,QAAzB,EAAmC;AACzCH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAY,CAACH,IAAI,CAACG,GAAD,CAAL,EAAYF,KAAK,CAACE,GAAD,CAAjB,CAAZ,CADyC,CACJ;AACrC,KAFM,MAEA;AAAE;AACR,UAAI,sBAAOF,KAAK,CAACE,GAAD,CAAZ,MAAsB,QAA1B,EAAoC;AACnCH,QAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYJ,YAAY,CAACC,IAAI,CAACG,GAAD,CAAL,EAAYF,KAAK,CAACE,GAAD,CAAjB,CAAxB;AACA,OAHK,CAIN;;AACA;AACD,GApBD;AAsBA,SAAOH,IAAP;AACA;;eAEc;AACdD,EAAAA,YAAY,EAAZA;AADc,C","sourcesContent":["function mergeFilters (base, model) {\n\tObject.keys(model).forEach(function (key) {\n\t\tif (!base[key]) { // base[key] is not present\n\t\t\tbase[key] = model[key];\n\t\t} else if (Array.isArray(base[key])) { // base[key] is an array\n\t\t\tif (Array.isArray(model[key])) {\n\t\t\t\tbase[key] = base[key].concat(model[key]);\n\t\t\t} else {\n\t\t\t\tbase[key].push(model[key]);\n\t\t\t}\n\t\t} else if (Array.isArray(model[key])) {\n\t\t\tmodel[key].push(base[key]);\n\t\t\tbase[key] = model[key];\n\t\t} else if (typeof base[key] !== 'object') {\n\t\t\tbase[key] = [base[key], model[key]]; // turn into array\n\t\t} else { // base[key] is likely JSON\n\t\t\tif (typeof model[key] === 'object') {\n\t\t\t\tbase[key] = mergeFilters(base[key], model[key]);\n\t\t\t}\n\t\t\t// if base[key] is an object, and model[key], ignore\n\t\t}\n\t});\n\n\treturn base;\n}\n\nexport default {\n\tmergeFilters\n};\n"],"file":"utils.js"}